label.col = c("red", rgb(1,1, 0, 0.75), "blue"))
plot(0, col = rgb(1,1, 0.5))dev.off()
dev.off()
library(VennDiagram)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
draw.pairwise.venn(10, 10, 5, col = c("red", "blue"), alpha = rep(.5, 2),
fill = c("red", "blue"),
category = c("Manual", "Automated"),
label.col = c("red", rgb(1,0, 0, 0.75), "blue"))
library(VennDiagram)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
draw.pairwise.venn(10, 10, 5, col = c("red", "blue"), alpha = rep(.5, 2),
fill = c("red", "blue"),
category = c("Manual", "Automated"),
label.col = c("red", NA, "blue"))
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.5
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = cols,
alpha = rep(alph, 2),
fill = cols,
category = c("Manual", "Automated"),
label.col = c(cols[1], NA, cols[2]))
dev.off()
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.5
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = cols,
alpha = rep(alph, 2),
fill = cols,
category = c("Manual", "Automated"),
label.col = c(cols[1], NA, cols[2]))
dev.off()
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.5
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = cols,
alpha = rep(alph, 2),
fill = cols,
category = c("Manual", "Automated"),
label.col = c(NA, NA, NA))
text(x= 0.5, y= 0.5, 'hey')
draw.pairwise.venn
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.5
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = cols,
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off()
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.5
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = cols,
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = cols,
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = c(NA, NA),
lty= c('n', 'n')
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off()
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = c(NA, NA),
lty= c('n', 'n'),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off()
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5,
lty= c('n', 'n'),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off()
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
draw.pairwise.venn(10, 10, 5, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
rm.obj = ls()
rm.obj = rm.obj[ !(rm.obj %in% c("fname", "slide"))]
rm(list=rm.obj)
library(ggplot2)
library(xtable)
library(scales)
library(fslr)
options(stringsAsFactors=FALSE)
username <- Sys.info()["user"][[1]]
rootdir = file.path("/Users", username, "Dropbox/CTR/DHanley/MISTIE")
homedir = file.path(rootdir, "ICH Analysis")
Mdir = file.path(rootdir, "MISTIE DSMB Analysis")
resdir <- file.path(homedir, "results")
rundir <- file.path(resdir, "Manuscript")
progdir <- file.path(homedir, "stataprograms")
datadir <- file.path(Mdir, "statacalc")
knitdir <- "~/CT_Registration/Oral_Proposal/"
load(file=file.path(rundir, "All_IncludingICES_Patients.Rda"))
load(file=file.path(rundir, "Randomized_Patients.Rda"))
load(file=file.path(knitdir, "111_Filenames.Rda"))
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
png(file.path(knitdir, "figure", 'Venn_Diagram.png'))
draw.pairwise.venn(10, 10, 5, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off();
file.path(knitdir, "figure", 'Venn_Diagram.png'
)
draw.pairwise.venn(10, 0, 0, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off()
draw.pairwise.venn(10, 0, 0, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
draw.pairwise.venn(10, -5, 0, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off()
draw.pairwise.venn(10, 10, 0, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
draw.pairwise.venn
tmp <- textGrob(label = "+", x = 0.5, y=0.5)
tmp
grid.draw(tmp)
draw.pairwise.venn(0, 0, 100, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
draw.pairwise.venn(0, 0, 10, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
draw.pairwise.venn(0.1, 0.1, 10, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
draw.pairwise.venn(10, 10, 0, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
library(VennDiagram)
library(scales)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
png(file.path(knitdir, "figure", 'Venn_Diagram.png'))
draw.pairwise.venn(10, 10, 5, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off();
png(file.path(knitdir, "figure", 'Circles.png'))
draw.pairwise.venn(10, 10, 0, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
tmp <- textGrob(label = "+", x = 0.5, y=0.5)
dev.off();
library(png)
png = readPNG("figure/Venn_Diagram.png")
png
dim(pg)
dim(png)
?readPNG("figure/Venn_Diagram.png")
png = readPNG("figure/Venn_Diagram.png", native=TRUE)
png
dim(png)
hist(c(png))
table(png)
table(table(png))
sort(table(png), decreasing = TRUE
)
sort(table(png), decreasing = TRUE
)[1:3]
sort(table(png), decreasing = TRUE
)[1:4]
p1 = png
p1[png == -4116113] = -1
?rasterImage
png = readPNG("figure/Venn_Diagram.png")
png
png[,1]
png[,,,4]
png[,,,1]
png[,,1]
dim(png)
png[,,2]
range(png[,,2])
?readPNG("figure/Venn_Diagram.png")
image(png)
png[1,1,]
png[1,12,]
png[1,2,]
png[1,3,]
x = apply(png, 3, c)
dim(x)
tail(x)
cols = rgb(x[,1], x[,2], x[,3], x[,4])
cc = matrix(cols, nrow=dim(x)[1], ncol= dim(x)[2])
cc
dim(cols)
plot(1:length(cols), pch='.', col=cols)
image(cc)
table(cc)
sort(table(cc), decreasing = TRUE)[1:4]
plot(1:4, col = names(sort(table(cc), decreasing = TRUE)[1:4]))
ind = which(cc == '#6F31C1FF', arr.ind=TRUE)
x
ind
ind = which(cc == '#6F31C1FF')
ind = which(cc != '#6F31C1FF')
dim(x)
dim(png)
x[ind] = 1
xx = apply(x, 2, matrix, nrow=480)
dim(xx)
library(plyr)
xx = aaply(x, 2, matrix, nrow=480)
dim(xx)
aperm(a, perm = c(3, 1,2 ))
xx2 = aperm(xx, perm = c(3, 1,2 ))
?writePNG
writePNG(xx2, target = "~/Desktop/test.png")
dim9xx2
dim(xx2)
xx2 = aperm(xx, perm = c(2,3,1 ))
dim(xx2)
writePNG(xx2, target = "~/Desktop/test.png")
library(VennDiagram)
library(scales)
library(plyr)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
pngname = file.path(knitdir, "figure", 'Venn_Diagram.png')
png(pngname)
draw.pairwise.venn(10, 10, 5, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off();
png = readPNG(pngname)
x = apply(png, 3, c)
cols = rgb(x[,1], x[,2], x[,3], x[,4])
cc = matrix(cols, nrow=dim(x)[1], ncol= dim(x)[2])
ind = which(cc != '#6F31C1FF')
x[ind] = 1
xx = aaply(x, 2, matrix, nrow=480)
outpng = file.path(knitdir, "figure", 'Center.png')
xx2 = aperm(xx, perm = c(2,3,1 ))
writePNG(xx2, target = outpng)
library(VennDiagram)
library(scales)
library(plyr)
library(png)
?draw.pairwise.venn
?theme
source('~/Dropbox/CTR/DHanley/CT_Registration/Segmentation/Seg_Figure/Seg_Figure.R')
rm(list=ls())
library(fslr)
library(cttools)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
setwd(datadir)
dir()
rm(list=ls())
library(fslr)
library(cttools)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
img = readNIfTI(file.path(datadir,
"152-303_20060502_0948_CT_2_CT_ROUTINE.nii.gz"),
reorient=FALSE)
roi = readNIfTI(file.path(datadir,
"152-303_20060502_0948_CT_2_CT_ROUTINEROI.nii.gz"),
reorient=FALSE)
pred = readNIfTI(file.path(datadir,
"152-303_20060502_0948_CT_2_CT_ROUTINE_mod_agg_Rigid_prediction_native.nii.gz"),
reorient=FALSE)
range(pred)
table(c(pred))
rm(list=ls())
library(fslr)
library(cttools)
library(scales)
homedir = path.expand("~/CT_Registration/Segmentation/")
datadir = file.path(homedir, "Seg_Figure")
resdir = file.path(homedir, "results")
img = readNIfTI(file.path(datadir,
"152-303_20060502_0948_CT_2_CT_ROUTINE.nii.gz"),
reorient=FALSE)
roi = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_HeadROI.nii.gz"),
reorient=FALSE)
pred = readNIfTI(file.path(datadir,
"161-413_20110710_1619_CT_2_HEAD_Head_mod_agg.nii.gz"),
reorient=FALSE)
pred = cal_img(pred > 0.5)
d = array(0, dim=dim(pred))
d[pred == 1 & roi == 1] = 1
d[pred == 1 & roi == 0] = 2
d[pred == 0 & roi == 1] = 2
plevs = c("Correct Prediction", "Incorrect Prediction")
d = niftiarr(pred, d)
xyz = cog(roi, ceil = TRUE)
pngname = file.path(resdir, "SS_Image_PrePredict_413.png")
png(filename = pngname, res=600, height=7, width=7, units= "in")
ortho2(ssimg,
window=c(0, 100),
xyz=xyz,
text = "Image",
text.cex = 2.3
)
dev.off()
pngname
mask.overlay(img, roi,
window=c(0, 100),
xyz=xyz,
text = "Manual\n Segmentation",
text.cex = 2.3
)
file.dir()
dir()
source('~/Dropbox/CTR/DHanley/CT_Registration/Segmentation/Seg_Figure/Seg_Figure2.R')
devtools::install_github('cboettig/knitcitations')
?PrintBibliography
??PrintBibliography
library(RefManageR)
bib <- ReadBib(file.path(knitdir, 'Oral_Proposal.bib'))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
bib
PrintBibliography
PrintBibliography(bib)
/works_cited
?works_cited
bibliography
library(knitcitations)
bibliography
?NoCite
NoCite(bibs)
NoCite(bib)
PrintBibliography()
PrintBibliography(bib)
library(RefManageR)
library(knitcitations)
bib <- ReadBib(file.path(knitdir, 'Oral_Proposal.bib'))
NoCite(bib)
bibliography()
bibliography(bib.style = "authortitle")
bibliography
get_bib()
library(RefManageR)
library(knitcitations)
bib <- ReadBib(file.path(knitdir, 'Oral_Proposal.bib'))
NoCite(bib)
bibliography(bib.style = "authortitle")
NoCite
library(RefManageR)
library(knitcitations)
bib <- ReadBib(file.path(knitdir, 'Oral_Proposal.bib'))
NoCite(bib)
library(RefManageR)
library(knitcitations)
bib <- ReadBib(file.path(knitdir, 'Oral_Proposal.bib'))
NoCite(bib)
bibliography(bib.style = "authortitle")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
x
source('~/.active-rstudio-document')
x
bib
citep(bib[[1]])
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
x = sapply(bib, citep)
x
source('~/.active-rstudio-document', echo=TRUE)
?bibliography
library(RefManageR)
library(knitcitations)
bib <- ReadBib(file.path(knitdir, 'Oral_Proposal.bib'))
x = sapply(bib, citep)
bibliography()
library(RefManageR)
library(knitcitations)
bib <- ReadBib(file.path(knitdir, 'Oral_Proposal.bib'))
x = sapply(bib, citep)
x= bibliography()
x
class(x)
x[[1]]
z = x[[1]]
z
as.character(z)
class(z)
unlist(z)
x
library(VennDiagram)
library(scales)
library(plyr)
library(png)
x = c(rep(0, 10), rep(1, 10))
y = rep(c(0, 1), times = 10)
df = data.frame(x=x, y = y)
alph = 0.75
cols = alpha(c("red", "blue"), alph)
pngname = file.path(knitdir, "figure", 'Venn_Diagram.png')
png(pngname)
draw.pairwise.venn(10, 10, 5, col = c(NA, NA),
alpha = rep(alph, 2),
fill = cols,
label.col = c(NA, NA, NA))
dev.off();
